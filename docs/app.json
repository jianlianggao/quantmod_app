[{"name":"app.R","content":"#\n# This is a Shiny web application. You can run the application by clicking\n# the 'Run App' button above.\n#\n# Find out more about building applications with Shiny here:\n#\n#    https://shiny.posit.co/\n#\n\nlibrary(shiny)\nlibrary(quantmod)\n\n# Define UI for application that draws a histogram\nui <- fluidPage(\n\n    # Application title\n    titlePanel(\"Stock Price\"),\n\n    # Sidebar with a slider input for number of bins \n    sidebarLayout(\n        sidebarPanel(\n          textInput(\"ticker\", \"Enter Stock Ticker Symbol:\", value = \"AAPL\"),\n          # dateRangeInput(\"dateRange\", \"Select Date Range:\",\n          #                start = Sys.Date() - 30, end = Sys.Date()),\n          #actionButton(\"goButton\", \"Go\")\n          #verbatimTextOutput(\"result\")\n        ),\n\n        # Show a plot of the generated distribution\n        mainPanel(\n           #plotOutput(\"distPlot\")\n        )\n    )\n)\n\n# Define server logic required to draw a histogram\nserver <- function(input, output, session) {\n  \n  stockData <- eventReactive(input$goButton, {\n    getSymbols(input$ticker, src = \"yahoo\", \n               # from = input$dateRange[1], to = input$dateRange[2], \n               auto.assign = FALSE)\n  })\n\n    # output$distPlot <- renderPlot({\n    #    data <- stockData()\n    #    chartSeries(data, name = paste(input$ticker, \"Price\") )\n    #    addBBands()\n    # })\n  \n  # Trigger initial rendering\n  observe({\n    updateTextInput(session, \"ticker\", value = \"AAPL\")\n    \n  })\n}\n\n# Run the application \nshinyApp(ui = ui, server = server)\n","type":"text"},{"name":"myapp.Rproj","content":"Version: 1.0\n\nRestoreWorkspace: Default\nSaveWorkspace: Default\nAlwaysSaveHistory: Default\n\nEnableCodeIndexing: Yes\nUseSpacesForTab: Yes\nNumSpacesForTab: 2\nEncoding: UTF-8\n\nRnwWeave: Sweave\nLaTeX: pdfLaTeX\n","type":"text"}]
